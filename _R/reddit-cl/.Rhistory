filled.contour(x, y, z)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .01)
y <- seq(from = -1, to = 1, by = .01)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,4,0), nrow = 2)
Sigma
Sigma <- matrix(c(1,4,0,0), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .01)
y <- seq(from = -1, to = 1, by = .01)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,4,0,0), nrow = 2)
Sigma
Sigma <- matrix(c(1,0,4,0), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .01)
y <- seq(from = -1, to = 1, by = .01)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,4,0), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,4,0,0), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,4,0,0), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,4,0,0), nrow = 2)
Sigma
Sigma <- matrix(c(1,4,0,1), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,4,2,1), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,0,1), nrow = 2, byrow = T)
Sigma
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,0,1), nrow = 2, byrow = T)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,4,0,0), nrow = 2, byrow = T)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,4,0), nrow = 2, byrow = T)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,
0,0),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,1,
1,0),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(2,4,
4,8),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,
0,0),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,
2,0),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,2,
2,4),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
a <- mean(c(1,2,3))
setwd("~/Documents/Kaggle/reddit/reddit-champions-league")
library(dplyr) # data manipulation
library(stringr) # string manipulation
library(knitr) # nice tables
library(ggplot2) # plotting
source("readData.R") # read and process from sqlite db
df <- readData()
supporter_counts <- df %>%
filter(!is.na(author_flair_text)) %>%
group_by(author_flair_text) %>%
summarize(comments = n(), users = n_distinct(author))
kable(head(supporter_counts %>%
select(author_flair_text, comments, users) %>%
arrange(desc(comments)), n = 10),
align = "c", col.names = c("Team", "Comments", "Users"))
```
fit_coef <- coef(lm(comments~users, supporter_counts)) # linear trendline
ggplot(supporter_counts, aes(x = users, y = comments)) +
geom_point() +
geom_text(aes(label = ifelse(users > 400, author_flair_text, "")), size = 4, hjust = -.05) +
theme_light(base_size=16) +
labs(xlab = "# of Unique Users", ylab = "# of Comments") +
xlim(c(0, 2900)) +
ggtitle("Active Supporters") +
geom_abline(intercept = fit_coef[1], slope = fit_coef[2])
?labs
ggplot(supporter_counts, aes(x = users, y = comments)) +
geom_point() +
geom_text(aes(label = ifelse(users > 400, author_flair_text, "")), size = 4, hjust = -.05) +
theme_light(base_size=16) +
labs(x = "# of Unique Users", y = "# of Comments") +
xlim(c(0, 2900)) +
ggtitle("Active Supporters") +
geom_abline(intercept = fit_coef[1], slope = fit_coef[2])
names(df)
supporter_counts <- df %>%
filter(!is.na(author_flair_text)) %>%
group_by(author_flair_text) %>%
summarize(comments = n(), users = n_distinct(author))
kable(head(supporter_counts %>%
select(author_flair_text, comments, users) %>%
arrange(desc(comments)), n = 10),
align = "c", col.names = c("Team", "Comments", "Users"))
head(df)
df %>% group_by(created_date) %>% summarize(comments = n())
ggplot(overall_volume, aes(x=created_date, y=comments)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "# of Posts", title = "Overall Post Volume") +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-05"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-06"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-12"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-13"))), linetype = 2)
overall_volume <- df %>%
group_by(created_date) %>%
summarize(comments = n())
ggplot(overall_volume, aes(x=created_date, y=comments)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "# of Posts", title = "Overall Post Volume") +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-05"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-06"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-12"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-13"))), linetype = 2)
ggplot(overall_volume, aes(x=created_date, y=comments)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "# of Posts", title = "Overall Post Volume") +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-05"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-06"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-12"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-13"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-27"))), color = 2)
ggplot(overall_volume, aes(x=created_date, y=comments)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "# of Posts", title = "Overall Post Volume") +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-05"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-06"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-12"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-13"))), linetype = 2) +
rect <- data.frame(xmin=5000, xmax=10000, ymin=-Inf, ymax=Inf)
geom_rect(data=data.frame(xmin=as.numeric(as.Date("2015-05-27")),
xmax=as.numeric(as.Date("2015-05-29")),
ymin=-Inf,
ymax=Inf),
aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax),
color=2,
alpha=0.3,
inherit.aes = FALSE)
overall_volume <- df %>%
group_by(created_date) %>%
summarize(comments = n())
ggplot(overall_volume, aes(x=created_date, y=comments)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "# of Posts", title = "Overall Post Volume") +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-05"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-06"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-12"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-13"))), linetype = 2) +
rect <- data.frame(xmin=5000, xmax=10000, ymin=-Inf, ymax=Inf) +
geom_rect(data=data.frame(xmin=as.numeric(as.Date("2015-05-27")),
xmax=as.numeric(as.Date("2015-05-29")),
ymin=-Inf,
ymax=Inf),
aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax),
color=2,
alpha=0.3,
inherit.aes = FALSE)
overall_volume <- df %>%
group_by(created_date) %>%
summarize(comments = n())
ggplot(overall_volume, aes(x=created_date, y=comments)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "# of Posts", title = "Overall Post Volume") +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-05"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-06"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-12"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-13"))), linetype = 2) +
geom_rect(data=data.frame(xmin=as.numeric(as.Date("2015-05-27")),
xmax=as.numeric(as.Date("2015-05-29")),
ymin=-Inf,
ymax=Inf),
aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax),
color=2,
alpha=0.3,
inherit.aes = FALSE)
overall_volume <- df %>%
group_by(created_date) %>%
summarize(comments = n())
ggplot(overall_volume, aes(x=created_date, y=comments)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "# of Posts", title = "Overall Post Volume") +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-05"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-06"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-12"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-13"))), linetype = 2) +
geom_rect(data=data.frame(xmin=as.Date("2015-05-27"),
xmax=as.Date("2015-05-29"),
ymin=-Inf,
ymax=Inf),
aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax),
color=2,
alpha=0.3,
inherit.aes = FALSE)
overall_volume <- df %>%
group_by(created_date) %>%
summarize(comments = n())
ggplot(overall_volume, aes(x=created_date, y=comments)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "# of Posts", title = "Overall Post Volume") +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-05"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-06"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-12"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-13"))), linetype = 2) +
geom_rect(data=data.frame(xmin=as.Date("2015-05-27"),
xmax=as.Date("2015-05-29"),
ymin=-Inf,
ymax=Inf),
aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax),
color=2,
fill=2
alpha=0.1,
inherit.aes = FALSE)
overall_volume <- df %>%
group_by(created_date) %>%
summarize(comments = n())
ggplot(overall_volume, aes(x=created_date, y=comments)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "# of Posts", title = "Overall Post Volume") +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-05"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-06"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-12"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-13"))), linetype = 2) +
geom_rect(data=data.frame(xmin=as.Date("2015-05-27"),
xmax=as.Date("2015-05-29"),
ymin=-Inf,
ymax=Inf),
aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax),
color=2,
fill=2
alpha=0.1,
inherit.aes = FALSE)
overall_volume <- df %>%
group_by(created_date) %>%
summarize(comments = n())
ggplot(overall_volume, aes(x=created_date, y=comments)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "# of Posts", title = "Overall Post Volume") +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-05"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-06"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-12"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-13"))), linetype = 2) +
geom_rect(data=data.frame(xmin=as.Date("2015-05-27"),
xmax=as.Date("2015-05-29"),
ymin=-Inf,
ymax=Inf),
aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax),
color=2,
fill=2,
alpha=0.1,
inherit.aes = FALSE)
# adapted from Andrew Brooks
# (http://brooksandrew.github.io/simpleblog/articles/blogging-with-r-markdown-and-jekyll-using-knitr/)
KnitPost <- function(site.path='~/Documents/Projects/llefebure.github.io/', rmd.path='',
overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0('~/Documents/Projects/llefebure.github.io/_R/', rmd.path)
fig.dir <- "assets/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
KnitPost(rmd.path="reddit-cl")
KnitPost(rmd.path="reddit-cl")
KnitPost(rmd.path="reddit-cl")
