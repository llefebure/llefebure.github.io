recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
KnitPost()
ggplot(semis, aes(x=created_date, y=comments, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16)
head(semis)
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16)
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
scale_fill_discrete(name="Team")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
theme(legend.title="Team")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
theme(legend.title=element_text("Team"))
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
theme(legend.title=element_text("Team"))
?element_text
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
scale_fill_discrete(name="Experimental\nCondition")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
xlab("date")
?labs
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "TITS")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
guide_legend(title = "Team")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
guide_legend(title = "Team")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_fill_discrete(guide = guide_legend(title = "Team"))
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_fill_discrete(guide = guide_legend(title = "Team"))
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_fill_discrete(title = "Team")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_fill_discrete(name = "Team")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
#theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_fill_discrete(name = "Team")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_fill_discrete(name = "Team")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
guides(fill=guide_legend(title="New Legend Title"))
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_fill_manual("OMG")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts", fill = "TITS")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_manual(values=c("red","green","blue", "red"))
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Fancy Title")
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team")
semis
semis$created_date[1]
semis$created_date[5]
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(semis$created_date[5])
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(x=semis$created_date[5]))
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=semis$created_date[5]))
semis$created_date[5]
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=as.Date(semis$created_date[5])))
semis$created_date
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept="2015-05-23"))
?geom_vline
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=3))
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=created_date))
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=as.numeric(semis$created_date[5])))
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=as.numeric(semis$created_date[5]), lty = 2))
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=as.numeric(semis$created_date[5]), linetype = 2))
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=as.numeric(semis$created_date[5])), linetype = 2)
semis
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=as.numeric(created_date[c(5,6,12,13)]), linetype = 2)
kas
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=as.numeric(created_date[c(5,6,12,13)])), linetype = 2)
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=as.numeric(created_date[5])), linetype = 2)
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=as.numeric(created_date[5])), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(created_date[6])), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(created_date[12])), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(created_date[13])), linetype = 2)
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=as.numeric(semis$created_date[5])), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(semis$created_date[6])), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(semis$created_date[12])), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(semis$created_date[13])), linetype = 2)
head(semis)
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=as.numeric("2016-05-05")), linetype = 2) +
geom_vline(aes(xintercept=as.numeric("2016-05-06")), linetype = 2) +
geom_vline(aes(xintercept=as.numeric("2016-05-12")), linetype = 2) +
geom_vline(aes(xintercept=as.numeric("2016-05-13")), linetype = 2)
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=as.numeric(as.Date("2016-05-05"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2016-05-06"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2016-05-12"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2016-05-13"))), linetype = 2)
?as.Date
as.numeric(as.Date("2016-05-05")))
as.numeric(as.Date("2016-05-05"))
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team")
p=ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team")
p
geom_vline(aes(xintercept=as.numeric(as.Date("2016-05-05"))), linetype = 2)
p+geom_vline(aes(xintercept=as.numeric(as.Date("2016-05-05"))), linetype = 2)
p+geom_vline(aes(xintercept=16926), linetype = 2)
p+geom_vline(aes(xintercept=1), linetype = 2)
POSIXct
geom_vline(aes(xintercept=as.numeric(as.POSIXct("2016-05-05"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.POSIXct("2016-05-05"))), linetype = 2)
p+geom_vline(aes(xintercept=as.numeric(as.POSIXct("2016-05-05"))), linetype = 2)
class(semis$created_date)
as.Date("2016-05-06")
class(as.Date("2016-05-06"))
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=as.numeric(as.POSIXct("2015-05-05"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-06"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-12"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-13"))), linetype = 2)
ggplot(semis, aes(x=created_date, y=dev, group=author_flair_text, color = author_flair_text)) +
geom_line() +
theme_light(base_size=16) +
labs(x = "Date", y = "Normalized Post Volume", title = "Normalized Volume of Posts") +
scale_colour_discrete(name = "Team") +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-05"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-06"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-12"))), linetype = 2) +
geom_vline(aes(xintercept=as.numeric(as.Date("2015-05-13"))), linetype = 2)
semis
df
names(df)
df$name
df %>% group_by(name) %>% summarize(c = count())
head(df)
nrow(df)
supporter_counts <- df %>%
filter(!is.na(author_flair_text)) %>%
group_by(author_flair_text) %>%
summarize(comments = n(), users = n_distinct(author))
kable(head(supporter_counts %>%
select(author_flair_text, comments, users) %>%
arrange(desc(comments)), n = 10),
align = "c", col.names = c("Team", "Comments", "Users"))
supporter_counts
sum(supporter_counts$comments)
names(df)
head(df)
df %>% group_by(parent_id) %>% summarize(c = count())
?summarize
df %>% group_by(parent_id) %>% summarize(c = n())
df %>% group_by(parent_id) %>% summarize(c = count()) %>% filter(c > 10)
df %>% group_by(parent_id) %>% summarize(c = n()) %>% filter(c > 10)
df %>% filter(parent_id = "t1_cn2cj92")
df %>% filter(parent_id == "t1_cn2cj92")
df %>% filter(parent_id == "t1_cn2cj92") %>% select(body)
library(stringr)
?str_split
str_split("hello my name", " ")
length(str_split("hello my name", " "))
length(str_split("hello my name", " ")[[1]])
df
df %>% mutate(body_length = length(str_split(body, " ")[[1]]))
df[1:10,] %>% mutate(body_length = length(str_split(body, " ")[[1]]))
df[1:10,] %>% mutate(body_length = length(str_split(body, " ")[[1]])) %>% select(body, body_length)
df$body[1]
df <- df %>%
mutate(body_length = length(str_split(body, " ")[[1]]))
df$body_length[1]
df$body[1]
df$body_length
df$body_length <- NULL
df <- df %>%
mutate(body_length = length(unlist(str_split(body, " "))))
head(df)
df$body_length[1:10]
# adapted from Andrew Brooks
# (http://brooksandrew.github.io/simpleblog/articles/blogging-with-r-markdown-and-jekyll-using-knitr/)
KnitPost <- function(site.path='~/Documents/Projects/llefebure.github.io/', rmd.path='_R',
overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- rmd.path # directory where your Rmd-files reside (relative to base)
fig.dir <- "assets/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
KnitPost(rmd.path='_R/champions_league/')
# adapted from Andrew Brooks
# (http://brooksandrew.github.io/simpleblog/articles/blogging-with-r-markdown-and-jekyll-using-knitr/)
KnitPost <- function(site.path='~/Documents/Projects/llefebure.github.io/', rmd.path='_R',
overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0(site.path, rmd.path) # directory where your Rmd-files reside (relative to site.path)
fig.dir <- "assets/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
KnitPost(rmd.path='_R/champions_league/')
# adapted from Andrew Brooks
# (http://brooksandrew.github.io/simpleblog/articles/blogging-with-r-markdown-and-jekyll-using-knitr/)
KnitPost <- function(site.path='~/Documents/Projects/llefebure.github.io/', rmd.path='',
overwriteAll=F, overwriteOne=NULL) {
if(!'package:knitr' %in% search()) library('knitr')
## Blog-specific directories.  This will depend on how you organize your blog.
site.path <- site.path # directory of jekyll blog (including trailing slash)
rmd.path <- paste0('~/Documents/Projects/llefebure.github.io/_R/', rmd.path)
fig.dir <- "assets/Rfig/" # directory to save figures
posts.path <- paste0(site.path, "_posts/") # directory for converted markdown files
cache.path <- paste0(site.path, "_cache") # necessary for plots
render_jekyll(highlight = "pygments")
opts_knit$set(base.url = '/', base.dir = site.path)
opts_chunk$set(fig.path=fig.dir, fig.width=8.5, fig.height=5.25, dev='svg', cache=F,
warning=F, message=F, cache.path=cache.path, tidy=F)
setwd(rmd.path) # setwd to base
# some logic to help us avoid overwriting already existing md files
files.rmd <- data.frame(rmd = list.files(path = rmd.path,
full.names = T,
pattern = "\\.Rmd$",
ignore.case = T,
recursive = F), stringsAsFactors=F)
files.rmd$corresponding.md.file <- paste0(posts.path, "/", basename(gsub(pattern = "\\.Rmd$", replacement = ".md", x = files.rmd$rmd)))
files.rmd$corresponding.md.exists <- file.exists(files.rmd$corresponding.md.file)
## determining which posts to overwrite from parameters overwriteOne & overwriteAll
files.rmd$md.overwriteAll <- overwriteAll
if(is.null(overwriteOne)==F) files.rmd$md.overwriteAll[grep(overwriteOne, files.rmd[,'rmd'], ignore.case=T)] <- T
files.rmd$md.render <- F
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$corresponding.md.exists[i] == F) {
files.rmd$md.render[i] <- T
}
if ((files.rmd$corresponding.md.exists[i] == T) && (files.rmd$md.overwriteAll[i] == T)) {
files.rmd$md.render[i] <- T
}
}
# For each Rmd file, render markdown (contingent on the flags set above)
for (i in 1:dim(files.rmd)[1]) {
if (files.rmd$md.render[i] == T) {
out.file <- knit(as.character(files.rmd$rmd[i]),
output = as.character(files.rmd$corresponding.md.file[i]),
envir = parent.frame(),
quiet = T)
message(paste0("KnitPost(): ", basename(files.rmd$rmd[i])))
}
}
}
KnitPost()
